from building import *

CWD = GetCurrentDir()

Import('BUILD_DIR')

generate(Glob('config/*.json'))

objs = Glob('src/*.c') + Glob('src/*.S')

Os_Cfg = Glob('config/GEN/Os*.c')


@register_application
class ApplicationX86(Application):
    compiler = 'I686GCC'

    def config(self):
        self.LIBS += ['LibC', 'Shell']
        self.CPPPATH += ['$INFRAS']
        self.Append(CPPDEFINES=['USE_STD_DEBUG', 'USE_SHELL'])
        self.Append(CPPPATH=['%s/include' % (CWD), '%s/src' % (CWD)])
        self.Append(LINKFLAGS=['-static', '-T', '%s/linker-app.lds' % (CWD),
                               '-Map', '"%s/x86.map"' % (BUILD_DIR)])
        self.SelectOS(arch='x86', config=Os_Cfg, CPPDEFINES=['OS_STK_SIZE_SCALER=4', 'USE_OSAL'])
        self.source = objs


@register_application
class ApplicationX86Run(Application):
    def config(self):
        pass

    def build(self):
        qemu = Qemu(arch='x86')
        target = '%s/X86' % (BUILD_DIR[:-3])
        if(IsPlatformWindows()):
            target = target + '.exe'
        qemu.Run('-kernel %s' % (target))
